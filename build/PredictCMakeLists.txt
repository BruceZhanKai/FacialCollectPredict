cmake_minimum_required(VERSION 2.8.4)

set(CMAKE_CXX_FLAGS " -std=c++11")

# define, up to you
project( c01-face-predict )


set(CMAKE_BUILD_TYPE Release)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake-modules)

set( CUDA_USE_STATIC_CUDA_RUNTIME OFF )

set( CMAKE_CXX_STANDARD_REQUIRED ON )

set( OpenCV_DIR /home/bruce/opencv-2.4.12/release )
set(OpenCV_FOUND 1)
find_package( OpenCV REQUIRED )
find_package( Boost COMPONENTS filesystem system REQUIRED)
message("EIGEN")
find_package( Eigen3 REQUIRED )

#set( Caffe_DIR "/home/user/caffe/cmake" )
#set( Caffe_INCLUDE_DIRS "/home/user/caffe/build/include" )
#set( Caffe_LIBRARIES "/home/user/caffe/build/lib/libcaffe.so" )
#find_package( Caffe REQUIRED )

find_package(Caffe)

#include_directories(/home/bruce/caffe/build/install/include/)
include_directories(/home/bruce/caffe/build/include/)

#head file path  
include_directories(build/CLM_src)
include_directories(build/rifd)
include_directories(${CMAKE_BINARY_DIR})
include_directories(/usr/include) 
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})	
include_directories(/home/bruce/dlib-18.18/dlib/build)

include_directories(${EIGEN3_INCLUDE_DIR})

include_directories(${Caffe_INCLUDE_DIRS})
add_definitions(${Caffe_DEFINITIONS})

#include Point Grey
#include_directories(/home/ubuntu/flycapture.2.9.3.43_armhf/include)
#link_directories(/home/ubuntu/flycapture.2.9.3.43_armhf/lib)
include_directories(/usr/include/flycapture) 
link_directories(/usr/lib)

###include_directories(${Caffe_INCLUDE_DIRS})
###add_definitions(${Caffe_DEFINITIONS})
#add_definitions(-DENABLE_ASSERTS)


set(LIB_FILES
	
	${CMAKE_BINARY_DIR}/CLM_src/CCNF_patch_expert.cpp
	${CMAKE_BINARY_DIR}/CLM_src/CCNF_patch_expert.h
	${CMAKE_BINARY_DIR}/CLM_src/CLM.cpp
	${CMAKE_BINARY_DIR}/CLM_src/CLM.h
	${CMAKE_BINARY_DIR}/CLM_src/CLM_core.h
	${CMAKE_BINARY_DIR}/CLM_src/CLMParameters.h
	${CMAKE_BINARY_DIR}/CLM_src/CLMTracker.cpp
	${CMAKE_BINARY_DIR}/CLM_src/CLMTracker.h
	${CMAKE_BINARY_DIR}/CLM_src/CLM_utils.cpp
	${CMAKE_BINARY_DIR}/CLM_src/CLM_utils.h
	${CMAKE_BINARY_DIR}/CLM_src/DetectionValidator.cpp
	${CMAKE_BINARY_DIR}/CLM_src/DetectionValidator.h
	${CMAKE_BINARY_DIR}/CLM_src/Patch_experts.cpp
	${CMAKE_BINARY_DIR}/CLM_src/Patch_experts.h
	${CMAKE_BINARY_DIR}/CLM_src/PAW.cpp
	${CMAKE_BINARY_DIR}/CLM_src/PAW.h
	${CMAKE_BINARY_DIR}/CLM_src/PDM.cpp
	${CMAKE_BINARY_DIR}/CLM_src/PDM.h
	${CMAKE_BINARY_DIR}/CLM_src/SVR_patch_expert.cpp
	${CMAKE_BINARY_DIR}/CLM_src/SVR_patch_expert.h

	)
	
	
#source directory  
#aux_source_directory(${CMAKE_BINARY_DIR}/CLM_src CLM_LIST) 
#aux_source_directory(${CMAKE_BINARY_DIR}/rfid RFID_LIST) 
#add_executable( ${PROJECT_NAME} libDetection.cpp ${SRC_LIST})
#add_library( ${PROJECT_NAME} SHARED ${LIB_FILES} )
#add_library( ${PROJECT_NAME} STATIC ${LIB_FILES} )


add_executable( ${PROJECT_NAME} c01-face-predict.cpp ${LIB_FILES})


FIND_LIBRARY( TBB_LIBRARY libtbb.so /usr/lib )
target_link_libraries( ${PROJECT_NAME} ${OpenCV_LIBS} ${TBB_LIBRARY} ${Boost_LIBRARIES} dlib)

target_link_libraries( ${PROJECT_NAME} flycapture )

target_link_libraries( ${PROJECT_NAME} ${Caffe_LIBRARIES} )

